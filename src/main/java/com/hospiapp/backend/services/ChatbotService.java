package com.hospiapp.backend.services;

import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;

@Service
public class ChatbotService {

    private final Map<String, String> responses = new HashMap<>();
    private final Map<Pattern, String> patternResponses = new HashMap<>();

    public ChatbotService() {
        initializeResponses();
    }

    private void initializeResponses() {
        // Respuestas directas
        responses.put("hola", "¬°Hola! Soy el asistente virtual del hospital. ¬øEn qu√© puedo ayudarte?");
        responses.put("ayuda", "Puedo ayudarte con informaci√≥n sobre citas m√©dicas, consultas, medicamentos y procesos del hospital.");
        responses.put("gracias", "¬°De nada! Estoy aqu√≠ para ayudarte cuando lo necesites.");
        responses.put("adios", "¬°Hasta luego! Que tengas un buen d√≠a.");

        // Patrones para respuestas m√°s complejas
        patternResponses.put(Pattern.compile("(?i).*cita.*agendar.*", Pattern.CASE_INSENSITIVE), 
            "Para agendar una cita m√©dica:\n" +
            "1. Inicia sesi√≥n en tu cuenta de paciente\n" +
            "2. Ve a la secci√≥n 'Citas'\n" +
            "3. Selecciona 'Nueva Cita'\n" +
            "4. Elige el m√©dico y la fecha disponible\n" +
            "5. Confirma la cita\n\n" +
            "Las citas de emergencia tienen prioridad y se atienden primero.");

        patternResponses.put(Pattern.compile("(?i).*cita.*cancelar.*", Pattern.CASE_INSENSITIVE),
            "Para cancelar una cita:\n" +
            "1. Ve a 'Mis Citas'\n" +
            "2. Encuentra la cita que quieres cancelar\n" +
            "3. Haz clic en 'Cancelar'\n" +
            "4. Confirma la cancelaci√≥n\n\n" +
            "Puedes cancelar hasta 2 horas antes de la cita.");

        patternResponses.put(Pattern.compile("(?i).*historial.*m√©dico.*", Pattern.CASE_INSENSITIVE),
            "Tu historial m√©dico incluye:\n" +
            "‚Ä¢ Todas las consultas realizadas\n" +
            "‚Ä¢ Diagn√≥sticos y tratamientos\n" +
            "‚Ä¢ Medicamentos recetados\n" +
            "‚Ä¢ Fechas de las consultas\n\n" +
            "Puedes acceder a √©l en la secci√≥n 'Mi Historial'.");

        patternResponses.put(Pattern.compile("(?i).*medicamento.*", Pattern.CASE_INSENSITIVE),
            "Informaci√≥n sobre medicamentos:\n" +
            "‚Ä¢ Consulta tu historial para ver medicamentos recetados\n" +
            "‚Ä¢ Sigue las indicaciones de tu m√©dico\n" +
            "‚Ä¢ Si tienes dudas, contacta a tu m√©dico\n" +
            "‚Ä¢ En caso de efectos secundarios, consulta inmediatamente");

        patternResponses.put(Pattern.compile("(?i).*emergencia.*", Pattern.CASE_INSENSITIVE),
            "En caso de emergencia:\n" +
            "üö® Llama al 911 inmediatamente\n" +
            "üè• Ve al servicio de urgencias\n" +
            "üìû Contacta a tu m√©dico de cabecera\n\n" +
            "Las citas de emergencia en el sistema tienen prioridad m√°xima.");

        patternResponses.put(Pattern.compile("(?i).*horario.*atenci√≥n.*", Pattern.CASE_INSENSITIVE),
            "Horarios de atenci√≥n:\n" +
            "üïê Lunes a Viernes: 8:00 AM - 6:00 PM\n" +
            "üïê S√°bados: 8:00 AM - 12:00 PM\n" +
            "‚ùå Domingos: Cerrado\n\n" +
            "Urgencias: 24/7");

        patternResponses.put(Pattern.compile("(?i).*especialista.*", Pattern.CASE_INSENSITIVE),
            "Especialistas disponibles:\n" +
            "‚Ä¢ Cardiolog√≠a\n" +
            "‚Ä¢ Pediatr√≠a\n" +
            "‚Ä¢ Medicina General\n" +
            "‚Ä¢ Ginecolog√≠a\n" +
            "‚Ä¢ Traumatolog√≠a\n\n" +
            "Puedes filtrar por especialidad al agendar citas.");

        patternResponses.put(Pattern.compile("(?i).*resultado.*examen.*", Pattern.CASE_INSENSITIVE),
            "Para consultar resultados de ex√°menes:\n" +
            "1. Inicia sesi√≥n en tu cuenta\n" +
            "2. Ve a 'Resultados de Ex√°menes'\n" +
            "3. Selecciona el examen que buscas\n" +
            "4. Los resultados aparecer√°n cuando est√©n listos\n\n" +
            "Recibir√°s una notificaci√≥n cuando est√©n disponibles.");

        patternResponses.put(Pattern.compile("(?i).*costo.*precio.*", Pattern.CASE_INSENSITIVE),
            "Informaci√≥n sobre costos:\n" +
            "‚Ä¢ Consulta general: $50\n" +
            "‚Ä¢ Especialista: $80\n" +
            "‚Ä¢ Emergencia: $120\n" +
            "‚Ä¢ Ex√°menes: Var√≠an seg√∫n el tipo\n\n" +
            "Los precios pueden variar. Consulta en recepci√≥n para informaci√≥n actualizada.");

        patternResponses.put(Pattern.compile("(?i).*contacto.*", Pattern.CASE_INSENSITIVE),
            "Informaci√≥n de contacto:\n" +
            "üìû Tel√©fono: (555) 123-4567\n" +
            "üìß Email: info@hospital.com\n" +
            "üåê Web: www.hospital.com\n" +
            "üìç Direcci√≥n: Calle Principal 123, Ciudad\n\n" +
            "Horario de atenci√≥n telef√≥nica: 8:00 AM - 6:00 PM");
    }

    public String processMessage(String message) {
        if (message == null || message.trim().isEmpty()) {
            return "Por favor, escribe tu pregunta o consulta.";
        }

        String lowerMessage = message.toLowerCase().trim();

        // Buscar respuesta directa
        String directResponse = responses.get(lowerMessage);
        if (directResponse != null) {
            return directResponse;
        }

        // Buscar por patrones
        for (Map.Entry<Pattern, String> entry : patternResponses.entrySet()) {
            if (entry.getKey().matcher(message).matches()) {
                return entry.getValue();
            }
        }

        // Respuesta por defecto si no encuentra coincidencia
        return "Entiendo tu consulta sobre: \"" + message + "\"\n\n" +
               "Aunque no tengo una respuesta espec√≠fica para esa pregunta, puedo ayudarte con:\n" +
               "‚Ä¢ Agendar citas m√©dicas\n" +
               "‚Ä¢ Consultar tu historial\n" +
               "‚Ä¢ Informaci√≥n sobre medicamentos\n" +
               "‚Ä¢ Horarios de atenci√≥n\n" +
               "‚Ä¢ Contacto del hospital\n\n" +
               "¬øHay algo espec√≠fico en lo que pueda ayudarte?";
    }

    public Map<String, String> getAvailableTopics() {
        Map<String, String> topics = new HashMap<>();
        topics.put("citas", "Informaci√≥n sobre agendar y cancelar citas");
        topics.put("historial", "Consultar historial m√©dico");
        topics.put("medicamentos", "Informaci√≥n sobre medicamentos");
        topics.put("emergencia", "Qu√© hacer en caso de emergencia");
        topics.put("horarios", "Horarios de atenci√≥n");
        topics.put("especialistas", "Especialistas disponibles");
        topics.put("ex√°menes", "Resultados de ex√°menes");
        topics.put("costos", "Informaci√≥n sobre precios");
        topics.put("contacto", "Datos de contacto del hospital");
        return topics;
    }
}
